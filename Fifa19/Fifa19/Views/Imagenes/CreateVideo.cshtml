@model Fifa19.Models.Imagenes

@{
    ViewBag.Title = "CreateVideo";
}

@section styles{
    <style>
        input[type="file"] {
            display: none;
        }

        .custom-ImagePath {
            border: 1px solid #ccc;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
        }
    </style>
}
@section scripts
{
    <script type="text/javascript">
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgFunc')
                        .attr('src', e.target.result)
                        .height(75);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
<h2>
    Create Video
</h2>

@using (Html.BeginForm("CreateVideo", "Imagenes", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Imagenes</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.Label("Foto", htmlAttributes: new { @class = "control-label col-md-2" })
        <video id="imgFunc" controls>
            <source src="@Url.Content("~/Resources/default.mp4")" type="video/mp4">
            Your browser does not support the video tag.
        </video>
        <label for="ImagePath" class="custom-ImagePath">
            <i class="fa fa-cloud-upload"></i> Seleccionar Video
        </label>
        <input id="ImagePath" type="file" name="file" onchange="readURL(this);" style="display:none;" accept=".mp4" />
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.image_byte, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.image_byte, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.image_byte, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}