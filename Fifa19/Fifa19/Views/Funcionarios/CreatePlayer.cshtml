@model Fifa19.Models.Jugador

@section styles{
    <style>
        input[type="file"] {
            display: none;
        }

        .custom-ImagePath {
            border: 1px solid #ccc;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
        }
    </style>
}
@section scripts
{
    <script type="text/javascript">
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgFunc')
                        .attr('src', e.target.result)
                        .height(75);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

<h2>Create Player</h2>

@using (Html.BeginForm("CreatePlayer", "Funcionarios", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <head>

    </head>
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Funcionario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.foto, "Foto", htmlAttributes: new { @class = "control-label col-md-2" })
            <img id="imgFunc" src="@Url.Content("~/Resources/default.png")" style="width:75px; margin-right:20px; margin-left:15px;" />
            <label for="ImagePath" class="custom-ImagePath">
                <i class="fa fa-cloud-upload"></i> Seleccionar Imagen
            </label>
            <input id="ImagePath" type="file" name="file" onchange="readURL(this);" style="display:none;" accept=".jpg, .jpeg, .png" />

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.idClub, "Club Actual", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idClub", null, htmlAttributes: new { @class = "form-control", style = "height: 35px" })
                @Html.ValidationMessageFor(model => model.Funcionario.idClub, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Funcionario.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        

        

        <div class="form-group">
            @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nroCamiseta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nroCamiseta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nroCamiseta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Funcionario.fchNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funcionario.fchNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Funcionario.fchNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.usuarioCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuarioCreacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.usuarioCreacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Player" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

